{
	"id": "3c4470f1be7dfeac2067a6cbec9248b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ROACHCOIN.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >0.4.0 <= 0.9.0;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () { }\r\n\r\n  function _msgSender() internal view returns (address) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor ()  {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor()  {\r\n    _name = \"COCKROACH-COIN\";\r\n    _symbol = \"ROACHCOIN\";\r\n    _decimals = 18;\r\n    _totalSupply = 300000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  event Burn(address indexed burner, uint256 value);\r\n\r\nfunction burn(uint256 amount) external {\r\n    address sender = _msgSender();\r\n    require(sender != address(0), \"BEP20: burn from the zero address\");\r\n    require(amount > 0, \"Amount must be greater than zero\");\r\n    require(_balances[sender] >= amount, \"Insufficient balance\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount);\r\n    _totalSupply = _totalSupply.sub(amount);\r\n\r\n    emit Burn(sender, amount);\r\n}\r\n\r\nfunction _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Burn(account, amount);\r\n}\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ROACHCOIN.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Burn(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ROACHCOIN.sol\":11323:19608  contract BEP20Token is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ROACHCOIN.sol\":11653:11906  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ROACHCOIN.sol\":9832:9849  address msgSender */\n  0x00\n    /* \"contracts/ROACHCOIN.sol\":9871:9889  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n  caller\n    /* \"contracts/ROACHCOIN.sol\":9871:9889  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/ROACHCOIN.sol\":9901:9944  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/ROACHCOIN.sol\":9901:9944  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":9832:9849  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":9901:9944  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/ROACHCOIN.sol\":11675:11699  _name = \"COCKROACH-COIN\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0e\n  dup2\n  mstore\n  shl(0x91, 0x21a7a1a5a927a0a1a416a1a7a4a7)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/ROACHCOIN.sol\":11675:11680  _name */\n  0x06\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":11675:11699  _name = \"COCKROACH-COIN\" */\n  tag_10\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":11675:11680  _name */\n  dup3\n    /* \"contracts/ROACHCOIN.sol\":11675:11699  _name = \"COCKROACH-COIN\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ROACHCOIN.sol\":11706:11727  _symbol = \"ROACHCOIN\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x09\n  dup2\n  mstore\n  shl(0xb9, 0x2927a0a1a421a7a4a7)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/ROACHCOIN.sol\":11706:11713  _symbol */\n  0x05\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":11706:11727  _symbol = \"ROACHCOIN\" */\n  tag_12\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":11706:11713  _symbol */\n  dup3\n    /* \"contracts/ROACHCOIN.sol\":11706:11727  _symbol = \"ROACHCOIN\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/ROACHCOIN.sol\":11734:11743  _decimals */\n  0x04\n    /* \"contracts/ROACHCOIN.sol\":11734:11748  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/ROACHCOIN.sol\":11746:11748  18 */\n  0x12\n    /* \"contracts/ROACHCOIN.sol\":11734:11748  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/ROACHCOIN.sol\":11770:11797  300000000000000000000000000 */\n  0xf8277896582678ac000000\n    /* \"contracts/ROACHCOIN.sol\":11755:11767  _totalSupply */\n  0x03\n    /* \"contracts/ROACHCOIN.sol\":11755:11797  _totalSupply = 300000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/ROACHCOIN.sol\":11814:11824  msg.sender */\n  caller\n    /* \"contracts/ROACHCOIN.sol\":11734:11743  _decimals */\n  0x00\n    /* \"contracts/ROACHCOIN.sol\":11804:11825  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/ROACHCOIN.sol\":11734:11748  _decimals = 18 */\n  0x01\n    /* \"contracts/ROACHCOIN.sol\":11804:11825  _balances[msg.sender] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/ROACHCOIN.sol\":11804:11840  _balances[msg.sender] = _totalSupply */\n  dup5\n  swap1\n  sstore\n    /* \"contracts/ROACHCOIN.sol\":11854:11900  Transfer(address(0), msg.sender, _totalSupply) */\n  mload\n    /* \"contracts/ROACHCOIN.sol\":11814:11824  msg.sender */\n  swap2\n  swap3\n    /* \"contracts/ROACHCOIN.sol\":11734:11743  _decimals */\n  swap1\n  swap2\n    /* \"contracts/ROACHCOIN.sol\":11854:11900  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  tag_13\n  swap2\n    /* \"#utility.yul\":2881:2906   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":2869:2871   */\n  0x20\n    /* \"#utility.yul\":2854:2872   */\n  add\n  swap1\n    /* \"#utility.yul\":2735:2912   */\n  jump\n    /* \"contracts/ROACHCOIN.sol\":11854:11900  Transfer(address(0), msg.sender, _totalSupply) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ROACHCOIN.sol\":11323:19608  contract BEP20Token is Context, IBEP20, Ownable {... */\n  jump(tag_22)\n    /* \"#utility.yul\":14:141   */\ntag_17:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_18:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_25:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_26:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_20:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_30\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_30:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_31:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_29:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_11:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_37\n  tag_17\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1582:1679   */\n  tag_38\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_39\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_20\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_42\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_42:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_33)\n    /* \"#utility.yul\":1810:2473   */\ntag_41:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_45:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_48:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2912   */\ntag_22:\n    /* \"contracts/ROACHCOIN.sol\":11323:19608  contract BEP20Token is Context, IBEP20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ROACHCOIN.sol\":11323:19608  contract BEP20Token is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ROACHCOIN.sol\":12376:12455  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ROACHCOIN.sol\":13416:13560  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/ROACHCOIN.sol\":13416:13560  function approve(address spender, uint256 amount) external returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":12511:12598  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n        /* \"contracts/ROACHCOIN.sol\":12580:12592  _totalSupply */\n      sload(0x03)\n        /* \"contracts/ROACHCOIN.sol\":12511:12598  function totalSupply() external view returns (uint256) {... */\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ROACHCOIN.sol\":12511:12598  function totalSupply() external view returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":14005:14297  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_27\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":12104:12183  function decimals() external view returns (uint8) {... */\n    tag_7:\n        /* \"contracts/ROACHCOIN.sol\":12168:12177  _decimals */\n      sload(0x04)\n        /* \"contracts/ROACHCOIN.sol\":12104:12183  function decimals() external view returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/ROACHCOIN.sol\":12168:12177  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/ROACHCOIN.sol\":12104:12183  function decimals() external view returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":14679:14879  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_27\n      tag_47\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":17744:18163  function burn(uint256 amount) external {... */\n    tag_9:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/ROACHCOIN.sol\":12652:12758  function balanceOf(address account) external view returns (uint256) {... */\n    tag_10:\n      tag_33\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":12734:12752  _balances[account] */\n      and\n        /* \"contracts/ROACHCOIN.sol\":12711:12718  uint256 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":12734:12752  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":12734:12743  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":12734:12752  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":12652:12758  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":10625:10755  function renounceOwnership() public onlyOwner {... */\n    tag_11:\n      tag_50\n      tag_60\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":11966:12045  function getOwner() external view returns (address) {... */\n    tag_12:\n        /* \"contracts/ROACHCOIN.sol\":12009:12016  address */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10084:10090  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ROACHCOIN.sol\":11966:12045  function getOwner() external view returns (address) {... */\n    tag_61:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"contracts/ROACHCOIN.sol\":11966:12045  function getOwner() external view returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":10023:10096  function owner() public view returns (address) {... */\n    tag_13:\n        /* \"contracts/ROACHCOIN.sol\":10061:10068  address */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10084:10090  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ROACHCOIN.sol\":10023:10096  function owner() public view returns (address) {... */\n      jump(tag_61)\n        /* \"contracts/ROACHCOIN.sol\":12240:12323  function symbol() external view returns (string memory) {... */\n    tag_14:\n      tag_23\n      tag_69\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":15802:15922  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_15:\n      tag_27\n      tag_72\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":15351:15602  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_27\n      tag_76\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":12952:13102  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_17:\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":13156:13286  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_18:\n      tag_33\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":13253:13271  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ROACHCOIN.sol\":13230:13237  uint256 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":13253:13271  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":13253:13264  _allowances */\n      0x02\n        /* \"contracts/ROACHCOIN.sol\":13253:13271  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":13253:13280  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":13156:13286  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":10900:11003  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n      tag_50\n      tag_89\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":12376:12455  function name() external view returns (string memory) {... */\n    tag_24:\n        /* \"contracts/ROACHCOIN.sol\":12415:12428  string memory */\n      0x60\n        /* \"contracts/ROACHCOIN.sol\":12444:12449  _name */\n      0x06\n        /* \"contracts/ROACHCOIN.sol\":12437:12449  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ROACHCOIN.sol\":12376:12455  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":13416:13560  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_30:\n        /* \"contracts/ROACHCOIN.sol\":13484:13488  bool */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":13497:13536  _approve(_msgSender(), spender, amount) */\n      tag_99\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":13520:13527  spender */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":13529:13535  amount */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":13497:13505  _approve */\n      tag_102\n        /* \"contracts/ROACHCOIN.sol\":13497:13536  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_99:\n      pop\n        /* \"contracts/ROACHCOIN.sol\":13550:13554  true */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":13416:13560  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_98:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":14005:14297  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_40:\n        /* \"contracts/ROACHCOIN.sol\":14096:14100  bool */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":14109:14145  _transfer(sender, recipient, amount) */\n      tag_105\n        /* \"contracts/ROACHCOIN.sol\":14119:14125  sender */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":14127:14136  recipient */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":14138:14144  amount */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":14109:14118  _transfer */\n      tag_106\n        /* \"contracts/ROACHCOIN.sol\":14109:14145  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/ROACHCOIN.sol\":14152:14273  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_107\n        /* \"contracts/ROACHCOIN.sol\":14161:14167  sender */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":14183:14272  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_109\n        /* \"contracts/ROACHCOIN.sol\":14221:14227  amount */\n      dup6\n        /* \"contracts/ROACHCOIN.sol\":14183:14272  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":14183:14202  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":14183:14194  _allowances */\n      0x02\n        /* \"contracts/ROACHCOIN.sol\":14183:14202  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":14183:14216  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":14183:14220  _allowances[sender][_msgSender()].sub */\n      tag_111\n        /* \"contracts/ROACHCOIN.sol\":14183:14272  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_109:\n        /* \"contracts/ROACHCOIN.sol\":14152:14160  _approve */\n      tag_102\n        /* \"contracts/ROACHCOIN.sol\":14152:14273  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contracts/ROACHCOIN.sol\":14287:14291  true */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":14005:14297  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":14679:14879  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_48:\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":14759:14763  bool */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":14804:14829  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":14804:14815  _allowances */\n      0x02\n        /* \"contracts/ROACHCOIN.sol\":14804:14829  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":14804:14838  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ROACHCOIN.sol\":14759:14763  bool */\n      swap1\n      swap2\n        /* \"contracts/ROACHCOIN.sol\":14772:14855  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_99\n      swap2\n        /* \"contracts/ROACHCOIN.sol\":14795:14802  spender */\n      dup6\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":14804:14854  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_109\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":14843:14853  addedValue */\n      dup7\n        /* \"contracts/ROACHCOIN.sol\":14804:14842  _allowances[_msgSender()][spender].add */\n      tag_118\n        /* \"contracts/ROACHCOIN.sol\":14804:14854  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":17744:18163  function burn(uint256 amount) external {... */\n    tag_53:\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n      dup1\n        /* \"contracts/ROACHCOIN.sol\":17826:17892  require(sender != address(0), \"BEP20: burn from the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":17826:17892  require(sender != address(0), \"BEP20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3318:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3377   */\n      0x21\n        /* \"#utility.yul\":3355:3373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3348:3378   */\n      mstore\n        /* \"#utility.yul\":3414:3448   */\n      0x42455032303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":3394:3412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3387:3449   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":3465:3483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3458:3489   */\n      mstore\n        /* \"#utility.yul\":3506:3525   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":17826:17892  require(sender != address(0), \"BEP20: burn from the zero address\") */\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/ROACHCOIN.sol\":17916:17917  0 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":17907:17913  amount */\n      dup3\n        /* \"contracts/ROACHCOIN.sol\":17907:17917  amount > 0 */\n      gt\n        /* \"contracts/ROACHCOIN.sol\":17899:17954  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3738:3740   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":17899:17954  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3720:3741   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3757:3775   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3750:3780   */\n      mstore\n        /* \"#utility.yul\":3816:3850   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":3796:3814   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3789:3851   */\n      mstore\n        /* \"#utility.yul\":3868:3886   */\n      0x64\n      add\n        /* \"contracts/ROACHCOIN.sol\":17899:17954  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_122\n        /* \"#utility.yul\":3536:3892   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":17899:17954  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":17969:17986  _balances[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":17969:17978  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":17969:17986  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ROACHCOIN.sol\":17969:17996  _balances[sender] >= amount */\n      dup3\n      gt\n      iszero\n        /* \"contracts/ROACHCOIN.sol\":17961:18021  require(_balances[sender] >= amount, \"Insufficient balance\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4099:4101   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":17961:18021  require(_balances[sender] >= amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4081:4102   */\n      mstore\n        /* \"#utility.yul\":4138:4140   */\n      0x14\n        /* \"#utility.yul\":4118:4136   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4111:4141   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4157:4175   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4150:4200   */\n      mstore\n        /* \"#utility.yul\":4217:4235   */\n      0x64\n      add\n        /* \"contracts/ROACHCOIN.sol\":17961:18021  require(_balances[sender] >= amount, \"Insufficient balance\") */\n      tag_122\n        /* \"#utility.yul\":3897:4241   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":17961:18021  require(_balances[sender] >= amount, \"Insufficient balance\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":18050:18067  _balances[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":18050:18059  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":18050:18067  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ROACHCOIN.sol\":18050:18079  _balances[sender].sub(amount) */\n      tag_130\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":18072:18078  amount */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":18050:18071  _balances[sender].sub */\n      tag_131\n        /* \"contracts/ROACHCOIN.sol\":18050:18079  _balances[sender].sub(amount) */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":18030:18047  _balances[sender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":18030:18039  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":18030:18047  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":18030:18079  _balances[sender] = _balances[sender].sub(amount) */\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":18101:18113  _totalSupply */\n      sload(0x03)\n        /* \"contracts/ROACHCOIN.sol\":18101:18125  _totalSupply.sub(amount) */\n      tag_132\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":18118:18124  amount */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":18101:18117  _totalSupply.sub */\n      tag_131\n        /* \"contracts/ROACHCOIN.sol\":18101:18125  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ROACHCOIN.sol\":18086:18098  _totalSupply */\n      0x03\n        /* \"contracts/ROACHCOIN.sol\":18086:18125  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":18139:18159  Burn(sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":18139:18159  Burn(sender, amount) */\n      dup3\n      and\n      swap1\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ROACHCOIN.sol\":18139:18159  Burn(sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ROACHCOIN.sol\":17783:18163  {... */\n      pop\n        /* \"contracts/ROACHCOIN.sol\":17744:18163  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":10625:10755  function renounceOwnership() public onlyOwner {... */\n    tag_60:\n        /* \"contracts/ROACHCOIN.sol\":10217:10223  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":10217:10239  _owner == _msgSender() */\n      eq\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_139\n      jump\t// in\n    tag_137:\n        /* \"contracts/ROACHCOIN.sol\":10720:10721  0 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10704:10710  _owner */\n      dup1\n      sload\n        /* \"contracts/ROACHCOIN.sol\":10683:10723  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":10704:10710  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":10683:10723  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":10720:10721  0 */\n      dup4\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":10683:10723  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/ROACHCOIN.sol\":10747:10748  0 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10730:10749  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":10625:10755  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":12240:12323  function symbol() external view returns (string memory) {... */\n    tag_69:\n        /* \"contracts/ROACHCOIN.sol\":12281:12294  string memory */\n      0x60\n        /* \"contracts/ROACHCOIN.sol\":12310:12317  _symbol */\n      0x05\n        /* \"contracts/ROACHCOIN.sol\":12303:12317  return _symbol */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":15802:15922  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_73:\n        /* \"contracts/ROACHCOIN.sol\":15858:15862  bool */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10217:10223  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":10217:10239  _owner == _msgSender() */\n      eq\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_139\n      jump\t// in\n    tag_152:\n        /* \"contracts/ROACHCOIN.sol\":15871:15898  _mint(_msgSender(), amount) */\n      tag_155\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":15891:15897  amount */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":15871:15876  _mint */\n      tag_157\n        /* \"contracts/ROACHCOIN.sol\":15871:15898  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"contracts/ROACHCOIN.sol\":15912:15916  true */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":10283:10284  _ */\n    tag_154:\n        /* \"contracts/ROACHCOIN.sol\":15802:15922  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":15351:15602  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_77:\n        /* \"contracts/ROACHCOIN.sol\":15436:15440  bool */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":15449:15578  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_99\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":15472:15479  spender */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":15481:15577  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_109\n        /* \"contracts/ROACHCOIN.sol\":15520:15535  subtractedValue */\n      dup6\n        /* \"contracts/ROACHCOIN.sol\":15481:15577  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":15481:15506  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":15481:15492  _allowances */\n      0x02\n        /* \"contracts/ROACHCOIN.sol\":15481:15506  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":15481:15515  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":15481:15519  _allowances[_msgSender()][spender].sub */\n      tag_111\n        /* \"contracts/ROACHCOIN.sol\":15481:15577  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":12952:13102  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_81:\n        /* \"contracts/ROACHCOIN.sol\":13023:13027  bool */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":13036:13078  _transfer(_msgSender(), recipient, amount) */\n      tag_99\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":13060:13069  recipient */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":13071:13077  amount */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":13036:13045  _transfer */\n      tag_106\n        /* \"contracts/ROACHCOIN.sol\":13036:13078  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":10900:11003  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_90:\n        /* \"contracts/ROACHCOIN.sol\":10217:10223  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":10217:10239  _owner == _msgSender() */\n      eq\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_139\n      jump\t// in\n    tag_169:\n        /* \"contracts/ROACHCOIN.sol\":10969:10997  _transferOwnership(newOwner) */\n      tag_172\n        /* \"contracts/ROACHCOIN.sol\":10988:10996  newOwner */\n      dup2\n        /* \"contracts/ROACHCOIN.sol\":10969:10987  _transferOwnership */\n      tag_173\n        /* \"contracts/ROACHCOIN.sol\":10969:10997  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/ROACHCOIN.sol\":10900:11003  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":18891:19211  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":18981:19000  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/ROACHCOIN.sol\":18973:19041  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4809:4811   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":18973:19041  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4791:4812   */\n      mstore\n        /* \"#utility.yul\":4848:4850   */\n      0x24\n        /* \"#utility.yul\":4828:4846   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4821:4851   */\n      mstore\n        /* \"#utility.yul\":4887:4921   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4867:4885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4860:4922   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4938:4956   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4931:4965   */\n      mstore\n        /* \"#utility.yul\":4982:5001   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":18973:19041  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_122\n        /* \"#utility.yul\":4607:5007   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":18973:19041  require(owner != address(0), \"BEP20: approve from the zero address\") */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":19056:19077  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/ROACHCOIN.sol\":19048:19116  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5214:5216   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":19048:19116  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5196:5217   */\n      mstore\n        /* \"#utility.yul\":5253:5255   */\n      0x22\n        /* \"#utility.yul\":5233:5251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5226:5256   */\n      mstore\n        /* \"#utility.yul\":5292:5326   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5272:5290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5265:5327   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5343:5361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5336:5368   */\n      mstore\n        /* \"#utility.yul\":5385:5404   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":19048:19116  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_122\n        /* \"#utility.yul\":5012:5410   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":19048:19116  require(spender != address(0), \"BEP20: approve to the zero address\") */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":19125:19143  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":19125:19136  _allowances */\n      0x02\n        /* \"contracts/ROACHCOIN.sol\":19125:19143  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":19125:19152  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":19125:19161  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":19173:19205  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":19173:19205  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ROACHCOIN.sol\":19173:19205  Approval(owner, spender, amount) */\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ROACHCOIN.sol\":18891:19211  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":16382:16831  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":16476:16496  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/ROACHCOIN.sol\":16468:16538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5617:5619   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":16468:16538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5599:5620   */\n      mstore\n        /* \"#utility.yul\":5656:5658   */\n      0x25\n        /* \"#utility.yul\":5636:5654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5629:5659   */\n      mstore\n        /* \"#utility.yul\":5695:5729   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5675:5693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5668:5730   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5746:5764   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5739:5774   */\n      mstore\n        /* \"#utility.yul\":5791:5810   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":16468:16538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_122\n        /* \"#utility.yul\":5415:5816   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":16468:16538  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":16553:16576  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/ROACHCOIN.sol\":16545:16616  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":16545:16616  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6005:6026   */\n      mstore\n        /* \"#utility.yul\":6062:6064   */\n      0x23\n        /* \"#utility.yul\":6042:6060   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6035:6065   */\n      mstore\n        /* \"#utility.yul\":6101:6135   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6081:6099   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6074:6136   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6152:6170   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6145:6178   */\n      mstore\n        /* \"#utility.yul\":6195:6214   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":16545:16616  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_122\n        /* \"#utility.yul\":5821:6220   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":16545:16616  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n    tag_187:\n        /* \"contracts/ROACHCOIN.sol\":16645:16716  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_190\n        /* \"contracts/ROACHCOIN.sol\":16667:16673  amount */\n      dup2\n        /* \"contracts/ROACHCOIN.sol\":16645:16716  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":16645:16662  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":16645:16654  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":16645:16662  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ROACHCOIN.sol\":16645:16716  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":16645:16666  _balances[sender].sub */\n      tag_111\n        /* \"contracts/ROACHCOIN.sol\":16645:16716  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":16625:16642  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":16625:16634  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":16625:16642  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":16625:16716  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":16746:16766  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ROACHCOIN.sol\":16746:16778  _balances[recipient].add(amount) */\n      tag_191\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":16771:16777  amount */\n      dup3\n        /* \"contracts/ROACHCOIN.sol\":16746:16770  _balances[recipient].add */\n      tag_118\n        /* \"contracts/ROACHCOIN.sol\":16746:16778  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":16723:16743  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":16723:16732  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":16723:16743  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":16723:16778  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":16790:16825  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_182\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":16818:16824  amount */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":5687:5865  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"contracts/ROACHCOIN.sol\":5773:5780  uint256 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":5805:5817  errorMessage */\n      dup2\n        /* \"contracts/ROACHCOIN.sol\":5797:5803  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/ROACHCOIN.sol\":5789:5818  require(b <= a, errorMessage) */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_194:\n      pop\n        /* \"contracts/ROACHCOIN.sol\":5825:5834  uint256 c */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":5837:5842  a - b */\n      tag_196\n        /* \"contracts/ROACHCOIN.sol\":5841:5842  b */\n      dup5\n        /* \"contracts/ROACHCOIN.sol\":5837:5838  a */\n      dup7\n        /* \"contracts/ROACHCOIN.sol\":5837:5842  a - b */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/ROACHCOIN.sol\":5825:5842  uint256 c = a - b */\n      swap6\n        /* \"contracts/ROACHCOIN.sol\":5687:5865  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":4860:5027  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"contracts/ROACHCOIN.sol\":4918:4925  uint256 */\n      0x00\n      dup1\n        /* \"contracts/ROACHCOIN.sol\":4946:4951  a + b */\n      tag_199\n        /* \"contracts/ROACHCOIN.sol\":4950:4951  b */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":4946:4947  a */\n      dup6\n        /* \"contracts/ROACHCOIN.sol\":4946:4951  a + b */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/ROACHCOIN.sol\":4934:4951  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/ROACHCOIN.sol\":4971:4972  a */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":4966:4967  c */\n      dup2\n        /* \"contracts/ROACHCOIN.sol\":4966:4972  c >= a */\n      lt\n      iszero\n        /* \"contracts/ROACHCOIN.sol\":4958:5004  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":4958:5004  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6804:6825   */\n      mstore\n        /* \"#utility.yul\":6861:6863   */\n      0x1b\n        /* \"#utility.yul\":6841:6859   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6834:6864   */\n      mstore\n        /* \"#utility.yul\":6900:6929   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":6880:6898   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6873:6930   */\n      mstore\n        /* \"#utility.yul\":6947:6965   */\n      0x64\n      add\n        /* \"contracts/ROACHCOIN.sol\":4958:5004  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_122\n        /* \"#utility.yul\":6620:6971   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":4958:5004  require(c >= a, \"SafeMath: addition overflow\") */\n    tag_201:\n        /* \"contracts/ROACHCOIN.sol\":5020:5021  c */\n      swap4\n        /* \"contracts/ROACHCOIN.sol\":4860:5027  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":5282:5412  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"contracts/ROACHCOIN.sol\":5340:5347  uint256 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":5363:5406  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_201\n        /* \"contracts/ROACHCOIN.sol\":5367:5368  a */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":5370:5371  b */\n      dup4\n        /* \"contracts/ROACHCOIN.sol\":5363:5406  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/ROACHCOIN.sol\":5363:5366  sub */\n      tag_111\n        /* \"contracts/ROACHCOIN.sol\":5363:5406  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":17092:17382  function _mint(address account, uint256 amount) internal {... */\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":17164:17185  account != address(0) */\n      dup3\n      and\n        /* \"contracts/ROACHCOIN.sol\":17156:17221  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7178:7180   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":17156:17221  require(account != address(0), \"BEP20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7160:7181   */\n      mstore\n        /* \"#utility.yul\":7217:7219   */\n      0x1f\n        /* \"#utility.yul\":7197:7215   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7190:7220   */\n      mstore\n        /* \"#utility.yul\":7256:7289   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7236:7254   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7229:7290   */\n      mstore\n        /* \"#utility.yul\":7307:7325   */\n      0x64\n      add\n        /* \"contracts/ROACHCOIN.sol\":17156:17221  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_122\n        /* \"#utility.yul\":6976:7331   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":17156:17221  require(account != address(0), \"BEP20: mint to the zero address\") */\n    tag_207:\n        /* \"contracts/ROACHCOIN.sol\":17245:17257  _totalSupply */\n      sload(0x03)\n        /* \"contracts/ROACHCOIN.sol\":17245:17269  _totalSupply.add(amount) */\n      tag_210\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":17262:17268  amount */\n      dup3\n        /* \"contracts/ROACHCOIN.sol\":17245:17261  _totalSupply.add */\n      tag_118\n        /* \"contracts/ROACHCOIN.sol\":17245:17269  _totalSupply.add(amount) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/ROACHCOIN.sol\":17230:17242  _totalSupply */\n      0x03\n        /* \"contracts/ROACHCOIN.sol\":17230:17269  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":17297:17315  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":17297:17306  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":17297:17315  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ROACHCOIN.sol\":17297:17327  _balances[account].add(amount) */\n      tag_211\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":17320:17326  amount */\n      dup3\n        /* \"contracts/ROACHCOIN.sol\":17297:17319  _balances[account].add */\n      tag_118\n        /* \"contracts/ROACHCOIN.sol\":17297:17327  _balances[account].add(amount) */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":17276:17294  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":17276:17285  _balances */\n      0x01\n        /* \"contracts/ROACHCOIN.sol\":17276:17294  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ROACHCOIN.sol\":17276:17327  _balances[account] = _balances[account].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":17339:17376  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"contracts/ROACHCOIN.sol\":17276:17294  _balances[account] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":17339:17376  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_212\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":17369:17375  amount */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":17339:17376  Transfer(address(0), account, amount) */\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ROACHCOIN.sol\":17092:17382  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":11101:11316  function _transferOwnership(address newOwner) internal {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":11171:11193  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7538:7540   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7520:7541   */\n      mstore\n        /* \"#utility.yul\":7577:7579   */\n      0x26\n        /* \"#utility.yul\":7557:7575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7550:7580   */\n      mstore\n        /* \"#utility.yul\":7616:7650   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7596:7614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7589:7651   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7667:7685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7660:7696   */\n      mstore\n        /* \"#utility.yul\":7713:7732   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_122\n        /* \"#utility.yul\":7336:7738   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_214:\n        /* \"contracts/ROACHCOIN.sol\":11269:11275  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/ROACHCOIN.sol\":11248:11286  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/ROACHCOIN.sol\":11269:11275  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/ROACHCOIN.sol\":11248:11286  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/ROACHCOIN.sol\":11293:11299  _owner */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":11293:11310  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":11101:11316  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_26:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_221:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_217:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":745:999   */\n    tag_29:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_227:\n        /* \"#utility.yul\":913:942   */\n      tag_228\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_217\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_39:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_232:\n        /* \"#utility.yul\":1563:1592   */\n      tag_233\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_217\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_234\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_217\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_52:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_237:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_56:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_239:\n        /* \"#utility.yul\":2236:2265   */\n      tag_201\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_217\n      jump\t// in\n        /* \"#utility.yul\":2484:2744   */\n    tag_85:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_243:\n        /* \"#utility.yul\":2652:2681   */\n      tag_244\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_217\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_245\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_217\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_93:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_247:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_248:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4246:4602   */\n    tag_139:\n        /* \"#utility.yul\":4448:4450   */\n      0x20\n        /* \"#utility.yul\":4430:4451   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4467:4485   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4460:4490   */\n      mstore\n        /* \"#utility.yul\":4526:4560   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4521:4523   */\n      0x40\n        /* \"#utility.yul\":4506:4524   */\n      dup3\n      add\n        /* \"#utility.yul\":4499:4561   */\n      mstore\n        /* \"#utility.yul\":4593:4595   */\n      0x60\n        /* \"#utility.yul\":4578:4596   */\n      add\n      swap1\n        /* \"#utility.yul\":4246:4602   */\n      jump\t// out\n        /* \"#utility.yul\":6225:6352   */\n    tag_218:\n        /* \"#utility.yul\":6286:6296   */\n      0x4e487b71\n        /* \"#utility.yul\":6281:6284   */\n      0xe0\n        /* \"#utility.yul\":6277:6297   */\n      shl\n        /* \"#utility.yul\":6274:6275   */\n      0x00\n        /* \"#utility.yul\":6267:6298   */\n      mstore\n        /* \"#utility.yul\":6317:6321   */\n      0x11\n        /* \"#utility.yul\":6314:6315   */\n      0x04\n        /* \"#utility.yul\":6307:6322   */\n      mstore\n        /* \"#utility.yul\":6341:6345   */\n      0x24\n        /* \"#utility.yul\":6338:6339   */\n      0x00\n        /* \"#utility.yul\":6331:6346   */\n      revert\n        /* \"#utility.yul\":6357:6485   */\n    tag_197:\n        /* \"#utility.yul\":6424:6433   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6445:6456   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6442:6479   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":6459:6477   */\n      tag_98\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":6490:6615   */\n    tag_200:\n        /* \"#utility.yul\":6555:6564   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6576:6586   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6573:6609   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":6589:6607   */\n      tag_98\n      tag_218\n      jump\t// in\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212203b398fc23dbd91d3fa4f6bf10b414fbb2487a81a2e98656f61400ced71f0a0c264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2914:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2827:4:1",
														"type": ""
													}
												],
												"src": "2735:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x21A7A1A5A927A0A1A416A1A7A4A7 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 PUSH3 0x87 SWAP1 DUP3 PUSH3 0x1D1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x2927A0A1A421A7A4A7 PUSH1 0xB9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 PUSH3 0xB7 SWAP1 DUP3 PUSH3 0x1D1 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0xF8277896582678AC000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH3 0x11E SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x29D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x157 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x178 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1CC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1A7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1C8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B3 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1ED JUMPI PUSH3 0x1ED PUSH3 0x12C JUMP JUMPDEST PUSH3 0x205 DUP2 PUSH3 0x1FE DUP5 SLOAD PUSH3 0x142 JUMP JUMPDEST DUP5 PUSH3 0x17E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x23D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x224 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1C8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x26E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x24D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x28D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE95 DUP1 PUSH3 0x2AD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x141 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x141 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2B6 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x304 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x312 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP5 DUP5 DUP5 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x3AF DUP5 CALLER PUSH2 0x3AA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDED PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x346 SWAP2 DUP6 SWAP1 PUSH2 0x3AA SWAP1 DUP7 PUSH2 0x9C1 JUMP JUMPDEST CALLER DUP1 PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x51E SWAP1 DUP4 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x544 SWAP1 DUP4 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2B6 SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x641 CALLER DUP4 PUSH2 0xA69 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 PUSH2 0x3AA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3B PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x6D9 DUP2 PUSH2 0xB4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH2 0x904 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE15 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x933 SWAP1 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F4 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x9B8 DUP5 DUP7 PUSH2 0xDC6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9CE DUP4 DUP6 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA20 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xACC SWAP1 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAF2 SWAP1 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xB43 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC3C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC20 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC90 DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBC DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP3 POP PUSH2 0xCCA PUSH1 0x20 DUP6 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA20 DUP3 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2A DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH2 0xD38 PUSH1 0x20 DUP5 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD55 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x34A JUMPI PUSH2 0x34A PUSH2 0xDB0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x34A JUMPI PUSH2 0x34A PUSH2 0xDB0 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 EXTCODESIZE CODECOPY DUP16 0xC2 RETURNDATASIZE 0xBD SWAP2 0xD3 STATICCALL 0x4F PUSH12 0xF10B414FBB2487A81A2E9865 PUSH16 0x61400CED71F0A0C264736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "11323:8285:0:-:0;;;11653:253;;;;;;;;;-1:-1:-1;9832:17:0;9871:18;;-1:-1:-1;;;;;;9871:18:0;3804:10;9871:18;;;;;9901:43;;3804:10;;;;9901:43;;9832:17;;9901:43;-1:-1:-1;11675:24:0;;;;;;;;;;;;-1:-1:-1;;;11675:24:0;;;;:5;;:24;;:5;:24;:::i;:::-;-1:-1:-1;11706:21:0;;;;;;;;;;;;-1:-1:-1;;;11706:21:0;;;;:7;;:21;;:7;:21;:::i;:::-;-1:-1:-1;11734:9:0;:14;;-1:-1:-1;;11734:14:0;11746:2;11734:14;;;11770:27;11755:12;:42;;;11814:10;11734:9;11804:21;;;11734:14;11804:21;;;;;;:36;;;11854:46;11814:10;;11734:9;;11854:46;;;;2881:25:1;;;2869:2;2854:18;;2735:177;11854:46:0;;;;;;;;11323:8285;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;2735:177::-;11323:8285:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_989": {
									"entryPoint": 1756,
									"id": 989,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_835": {
									"entryPoint": 2665,
									"id": 835,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_435": {
									"entryPoint": 2895,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_789": {
									"entryPoint": 2049,
									"id": 789,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_152": {
									"entryPoint": 2497,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_596": {
									"entryPoint": null,
									"id": 596,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_616": {
									"entryPoint": 825,
									"id": 616,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_559": {
									"entryPoint": null,
									"id": 559,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_902": {
									"entryPoint": 1007,
									"id": 902,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_519": {
									"entryPoint": null,
									"id": 519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_710": {
									"entryPoint": 1610,
									"id": 710,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_510": {
									"entryPoint": null,
									"id": 510,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_681": {
									"entryPoint": 953,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_729": {
									"entryPoint": 1548,
									"id": 729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_537": {
									"entryPoint": 679,
									"id": 537,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_396": {
									"entryPoint": 1417,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_169": {
									"entryPoint": 2599,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_197": {
									"entryPoint": 2439,
									"id": 197,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_528": {
									"entryPoint": 1533,
									"id": 528,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_546": {
									"entryPoint": null,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_653": {
									"entryPoint": 848,
									"id": 653,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_409": {
									"entryPoint": 1702,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_579": {
									"entryPoint": 1689,
									"id": 579,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7740:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:1"
															},
															"nodeType": "YulIf",
															"src": "2165:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:1",
														"type": ""
													}
												],
												"src": "2085:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:1",
														"type": ""
													}
												],
												"src": "2276:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:1"
															},
															"nodeType": "YulIf",
															"src": "2581:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:1",
														"type": ""
													}
												],
												"src": "2484:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:1"
															},
															"nodeType": "YulIf",
															"src": "2892:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:1"
															},
															"nodeType": "YulIf",
															"src": "2962:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:1",
														"type": ""
													}
												],
												"src": "2749:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3308:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3325:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:1"
																	},
																	{
																		"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3414:34:1",
																		"type": "",
																		"value": "BEP20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3469:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3480:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3465:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3485:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3458:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3498:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3510:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3521:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3498:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3285:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3299:4:1",
														"type": ""
													}
												],
												"src": "3134:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3710:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3720:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3720:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3800:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3811:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3796:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3796:18:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3816:34:1",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3789:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3860:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3872:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3883:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3860:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3687:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3701:4:1",
														"type": ""
													}
												],
												"src": "3536:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4071:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4088:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4099:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4081:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4133:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4118:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4111:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4161:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4157:18:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4177:22:1",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4150:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4209:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4221:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4232:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4217:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4209:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4048:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4062:4:1",
														"type": ""
													}
												],
												"src": "3897:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4420:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4430:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4471:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4482:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4467:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4460:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4521:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4506:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4526:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4499:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4582:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4593:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4570:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4397:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4411:4:1",
														"type": ""
													}
												],
												"src": "4246:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4781:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4798:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4791:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4848:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4882:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4867:18:1"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4887:34:1",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4860:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4953:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4958:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4931:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4974:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4974:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4758:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4772:4:1",
														"type": ""
													}
												],
												"src": "4607:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5186:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5203:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5214:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5237:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5248:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5253:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5226:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5226:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5226:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5276:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5287:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5272:18:1"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5292:34:1",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5265:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5347:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5358:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5343:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5363:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5336:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5377:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5389:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5377:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5163:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5177:4:1",
														"type": ""
													}
												],
												"src": "5012:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5589:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5606:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5617:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5599:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5640:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5651:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5656:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5690:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5675:18:1"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5695:34:1",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5761:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5746:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5766:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5739:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5739:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5783:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5806:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5783:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5580:4:1",
														"type": ""
													}
												],
												"src": "5415:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5995:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6012:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6005:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6005:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6057:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6042:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6062:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6035:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6035:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6096:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6081:18:1"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6101:34:1",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6074:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6167:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6152:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6172:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6145:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6187:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6199:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6195:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6187:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5972:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5986:4:1",
														"type": ""
													}
												],
												"src": "5821:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6274:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6281:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6286:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6277:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6267:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6267:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6317:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6307:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6341:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6331:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6225:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6406:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6416:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6428:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6431:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6416:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6457:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6459:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6459:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6459:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6448:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6454:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6445:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6445:11:1"
															},
															"nodeType": "YulIf",
															"src": "6442:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6388:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6391:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6397:4:1",
														"type": ""
													}
												],
												"src": "6357:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6538:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6548:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6559:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6562:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6587:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6589:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6589:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6589:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6579:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6576:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:10:1"
															},
															"nodeType": "YulIf",
															"src": "6573:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6521:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6524:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6530:3:1",
														"type": ""
													}
												],
												"src": "6490:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6794:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6804:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6834:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6895:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:18:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6900:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6873:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6939:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6947:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6939:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6771:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6785:4:1",
														"type": ""
													}
												],
												"src": "6620:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7150:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7167:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7160:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7160:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7201:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7212:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7197:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7240:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7251:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7236:18:1"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7256:33:1",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7229:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7229:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7229:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7311:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7322:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7299:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7127:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7141:4:1",
														"type": ""
													}
												],
												"src": "6976:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7510:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7527:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7538:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7520:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7520:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7561:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7572:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7557:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7577:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7550:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7550:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7600:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7611:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7596:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7616:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7671:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7682:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7667:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7667:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7687:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7660:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7705:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7717:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7728:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7713:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7705:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7487:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7501:4:1",
														"type": ""
													}
												],
												"src": "7336:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"BEP20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a0712d6811610071578063a0712d6814610222578063a457c2d714610235578063a9059cbb14610248578063dd62ed3e1461025b578063f2fde38b1461029457600080fd5b8063715018a6146101dc578063893d20e8146101e45780638da5cb5b1461020957806395d89b411461021a57600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018b57806342966c681461019e57806370a08231146101b357600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b6101186102a7565b6040516101259190610c0f565b60405180910390f35b61014161013c366004610c74565b610339565b6040519015158152602001610125565b6003545b604051908152602001610125565b610141610171366004610c9e565b610350565b60045460405160ff9091168152602001610125565b610141610199366004610c74565b6103b9565b6101b16101ac366004610cda565b6103ef565b005b6101556101c1366004610cf3565b6001600160a01b031660009081526001602052604090205490565b6101b1610589565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610125565b6000546001600160a01b03166101f1565b6101186105fd565b610141610230366004610cda565b61060c565b610141610243366004610c74565b61064a565b610141610256366004610c74565b610699565b610155610269366004610d0e565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101b16102a2366004610cf3565b6106a6565b6060600680546102b690610d41565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610d41565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b60006103463384846106dc565b5060015b92915050565b600061035d848484610801565b6103af84336103aa85604051806060016040528060288152602001610ded602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610987565b6106dc565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103469185906103aa90866109c1565b338061044c5760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b6000821161049c5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610443565b6001600160a01b0381166000908152600160205260409020548211156104fb5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610443565b6001600160a01b03811660009081526001602052604090205461051e9083610a27565b6001600160a01b0382166000908152600160205260409020556003546105449083610a27565b6003556040518281526001600160a01b038216907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a25050565b6000546001600160a01b031633146105b35760405162461bcd60e51b815260040161044390610d7b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600580546102b690610d41565b600080546001600160a01b031633146106375760405162461bcd60e51b815260040161044390610d7b565b6106413383610a69565b5060015b919050565b600061034633846103aa85604051806060016040528060258152602001610e3b602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610987565b6000610346338484610801565b6000546001600160a01b031633146106d05760405162461bcd60e51b815260040161044390610d7b565b6106d981610b4f565b50565b6001600160a01b03831661073e5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610443565b6001600160a01b03821661079f5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610443565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108655760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610443565b6001600160a01b0382166108c75760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610443565b61090481604051806060016040528060268152602001610e15602691396001600160a01b0386166000908152600160205260409020549190610987565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461093390826109c1565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107f49085815260200190565b600081848411156109ab5760405162461bcd60e51b81526004016104439190610c0f565b5060006109b88486610dc6565b95945050505050565b6000806109ce8385610dd9565b905083811015610a205760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610443565b9392505050565b6000610a2083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610987565b6001600160a01b038216610abf5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610443565b600354610acc90826109c1565b6003556001600160a01b038216600090815260016020526040902054610af290826109c1565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b439085815260200190565b60405180910390a35050565b6001600160a01b038116610bb45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610443565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208083528351808285015260005b81811015610c3c57858101830151858201604001528201610c20565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064557600080fd5b60008060408385031215610c8757600080fd5b610c9083610c5d565b946020939093013593505050565b600080600060608486031215610cb357600080fd5b610cbc84610c5d565b9250610cca60208501610c5d565b9150604084013590509250925092565b600060208284031215610cec57600080fd5b5035919050565b600060208284031215610d0557600080fd5b610a2082610c5d565b60008060408385031215610d2157600080fd5b610d2a83610c5d565b9150610d3860208401610c5d565b90509250929050565b600181811c90821680610d5557607f821691505b602082108103610d7557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561034a5761034a610db0565b8082018082111561034a5761034a610db056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203b398fc23dbd91d3fa4f6bf10b414fbb2487a81a2e98656f61400ced71f0a0c264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x141 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x141 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x141 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2B6 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x304 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x312 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP5 DUP5 DUP5 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x3AF DUP5 CALLER PUSH2 0x3AA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDED PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x346 SWAP2 DUP6 SWAP1 PUSH2 0x3AA SWAP1 DUP7 PUSH2 0x9C1 JUMP JUMPDEST CALLER DUP1 PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x51E SWAP1 DUP4 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0x544 SWAP1 DUP4 PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2B6 SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x641 CALLER DUP4 PUSH2 0xA69 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 PUSH2 0x3AA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3B PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x6D9 DUP2 PUSH2 0xB4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x865 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH2 0x904 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE15 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x933 SWAP1 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7F4 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x9AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x9B8 DUP5 DUP7 PUSH2 0xDC6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9CE DUP4 DUP6 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA20 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x987 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xACC SWAP1 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAF2 SWAP1 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xB43 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC3C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC20 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC90 DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBC DUP5 PUSH2 0xC5D JUMP JUMPDEST SWAP3 POP PUSH2 0xCCA PUSH1 0x20 DUP6 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA20 DUP3 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2A DUP4 PUSH2 0xC5D JUMP JUMPDEST SWAP2 POP PUSH2 0xD38 PUSH1 0x20 DUP5 ADD PUSH2 0xC5D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD55 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x34A JUMPI PUSH2 0x34A PUSH2 0xDB0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x34A JUMPI PUSH2 0x34A PUSH2 0xDB0 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 EXTCODESIZE CODECOPY DUP16 0xC2 RETURNDATASIZE 0xBD SWAP2 0xD3 STATICCALL 0x4F PUSH12 0xF10B414FBB2487A81A2E9865 PUSH16 0x61400CED71F0A0C264736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "11323:8285:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12376:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13416:144;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;13416:144:0;1004:187:1;12511:87:0;12580:12;;12511:87;;;1342:25:1;;;1330:2;1315:18;12511:87:0;1196:177:1;14005:292:0;;;;;;:::i;:::-;;:::i;12104:79::-;12168:9;;12104:79;;12168:9;;;;1853:36:1;;1841:2;1826:18;12104:79:0;1711:184:1;14679:200:0;;;;;;:::i;:::-;;:::i;17744:419::-;;;;;;:::i;:::-;;:::i;:::-;;12652:106;;;;;;:::i;:::-;-1:-1:-1;;;;;12734:18:0;12711:7;12734:18;;;:9;:18;;;;;;;12652:106;10625:130;;;:::i;11966:79::-;12009:7;10084:6;-1:-1:-1;;;;;10084:6:0;11966:79;;;-1:-1:-1;;;;;2440:32:1;;;2422:51;;2410:2;2395:18;11966:79:0;2276:203:1;10023:73:0;10061:7;10084:6;-1:-1:-1;;;;;10084:6:0;10023:73;;12240:83;;;:::i;15802:120::-;;;;;;:::i;:::-;;:::i;15351:251::-;;;;;;:::i;:::-;;:::i;12952:150::-;;;;;;:::i;:::-;;:::i;13156:130::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13253:18:0;;;13230:7;13253:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;13156:130;10900:103;;;;;;:::i;:::-;;:::i;12376:79::-;12415:13;12444:5;12437:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12376:79;:::o;13416:144::-;13484:4;13497:39;3804:10;13520:7;13529:6;13497:8;:39::i;:::-;-1:-1:-1;13550:4:0;13416:144;;;;;:::o;14005:292::-;14096:4;14109:36;14119:6;14127:9;14138:6;14109:9;:36::i;:::-;14152:121;14161:6;3804:10;14183:89;14221:6;14183:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14183:19:0;;;;;;:11;:19;;;;;;;;3804:10;14183:33;;;;;;;;;;:37;:89::i;:::-;14152:8;:121::i;:::-;-1:-1:-1;14287:4:0;14005:292;;;;;:::o;14679:200::-;3804:10;14759:4;14804:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;14804:34:0;;;;;;;;;;14759:4;;14772:83;;14795:7;;14804:50;;14843:10;14804:38;:50::i;17744:419::-;3804:10;;17826:66;;;;-1:-1:-1;;;17826:66:0;;3336:2:1;17826:66:0;;;3318:21:1;3375:2;3355:18;;;3348:30;3414:34;3394:18;;;3387:62;-1:-1:-1;;;3465:18:1;;;3458:31;3506:19;;17826:66:0;;;;;;;;;17916:1;17907:6;:10;17899:55;;;;-1:-1:-1;;;17899:55:0;;3738:2:1;17899:55:0;;;3720:21:1;;;3757:18;;;3750:30;3816:34;3796:18;;;3789:62;3868:18;;17899:55:0;3536:356:1;17899:55:0;-1:-1:-1;;;;;17969:17:0;;;;;;:9;:17;;;;;;:27;-1:-1:-1;17969:27:0;17961:60;;;;-1:-1:-1;;;17961:60:0;;4099:2:1;17961:60:0;;;4081:21:1;4138:2;4118:18;;;4111:30;-1:-1:-1;;;4157:18:1;;;4150:50;4217:18;;17961:60:0;3897:344:1;17961:60:0;-1:-1:-1;;;;;18050:17:0;;;;;;:9;:17;;;;;;:29;;18072:6;18050:21;:29::i;:::-;-1:-1:-1;;;;;18030:17:0;;;;;;:9;:17;;;;;:49;18101:12;;:24;;18118:6;18101:16;:24::i;:::-;18086:12;:39;18139:20;;1342:25:1;;;-1:-1:-1;;;;;18139:20:0;;;;;1330:2:1;1315:18;18139:20:0;;;;;;;17783:380;17744:419;:::o;10625:130::-;10217:6;;-1:-1:-1;;;;;10217:6:0;3804:10;10217:22;10209:67;;;;-1:-1:-1;;;10209:67:0;;;;;;;:::i;:::-;10720:1:::1;10704:6:::0;;10683:40:::1;::::0;-1:-1:-1;;;;;10704:6:0;;::::1;::::0;10683:40:::1;::::0;10720:1;;10683:40:::1;10747:1;10730:19:::0;;-1:-1:-1;;;;;;10730:19:0::1;::::0;;10625:130::o;12240:83::-;12281:13;12310:7;12303:14;;;;;:::i;15802:120::-;15858:4;10217:6;;-1:-1:-1;;;;;10217:6:0;3804:10;10217:22;10209:67;;;;-1:-1:-1;;;10209:67:0;;;;;;;:::i;:::-;15871:27:::1;3804:10:::0;15891:6:::1;15871:5;:27::i;:::-;-1:-1:-1::0;15912:4:0::1;10283:1;15802:120:::0;;;:::o;15351:251::-;15436:4;15449:129;3804:10;15472:7;15481:96;15520:15;15481:96;;;;;;;;;;;;;;;;;3804:10;15481:25;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;15481:34:0;;;;;;;;;;;;:38;:96::i;12952:150::-;13023:4;13036:42;3804:10;13060:9;13071:6;13036:9;:42::i;10900:103::-;10217:6;;-1:-1:-1;;;;;10217:6:0;3804:10;10217:22;10209:67;;;;-1:-1:-1;;;10209:67:0;;;;;;;:::i;:::-;10969:28:::1;10988:8;10969:18;:28::i;:::-;10900:103:::0;:::o;18891:320::-;-1:-1:-1;;;;;18981:19:0;;18973:68;;;;-1:-1:-1;;;18973:68:0;;4809:2:1;18973:68:0;;;4791:21:1;4848:2;4828:18;;;4821:30;4887:34;4867:18;;;4860:62;-1:-1:-1;;;4938:18:1;;;4931:34;4982:19;;18973:68:0;4607:400:1;18973:68:0;-1:-1:-1;;;;;19056:21:0;;19048:68;;;;-1:-1:-1;;;19048:68:0;;5214:2:1;19048:68:0;;;5196:21:1;5253:2;5233:18;;;5226:30;5292:34;5272:18;;;5265:62;-1:-1:-1;;;5343:18:1;;;5336:32;5385:19;;19048:68:0;5012:398:1;19048:68:0;-1:-1:-1;;;;;19125:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;19173:32;;1342:25:1;;;19173:32:0;;1315:18:1;19173:32:0;;;;;;;;18891:320;;;:::o;16382:449::-;-1:-1:-1;;;;;16476:20:0;;16468:70;;;;-1:-1:-1;;;16468:70:0;;5617:2:1;16468:70:0;;;5599:21:1;5656:2;5636:18;;;5629:30;5695:34;5675:18;;;5668:62;-1:-1:-1;;;5746:18:1;;;5739:35;5791:19;;16468:70:0;5415:401:1;16468:70:0;-1:-1:-1;;;;;16553:23:0;;16545:71;;;;-1:-1:-1;;;16545:71:0;;6023:2:1;16545:71:0;;;6005:21:1;6062:2;6042:18;;;6035:30;6101:34;6081:18;;;6074:62;-1:-1:-1;;;6152:18:1;;;6145:33;6195:19;;16545:71:0;5821:399:1;16545:71:0;16645;16667:6;16645:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16645:17:0;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;16625:17:0;;;;;;;:9;:17;;;;;;:91;;;;16746:20;;;;;;;:32;;16771:6;16746:24;:32::i;:::-;-1:-1:-1;;;;;16723:20:0;;;;;;;:9;:20;;;;;;;:55;;;;16790:35;;;;;;;;;;16818:6;1342:25:1;;1330:2;1315:18;;1196:177;5687:178:0;5773:7;5805:12;5797:6;;;;5789:29;;;;-1:-1:-1;;;5789:29:0;;;;;;;;:::i;:::-;-1:-1:-1;5825:9:0;5837:5;5841:1;5837;:5;:::i;:::-;5825:17;5687:178;-1:-1:-1;;;;;5687:178:0:o;4860:167::-;4918:7;;4946:5;4950:1;4946;:5;:::i;:::-;4934:17;;4971:1;4966;:6;;4958:46;;;;-1:-1:-1;;;4958:46:0;;6822:2:1;4958:46:0;;;6804:21:1;6861:2;6841:18;;;6834:30;6900:29;6880:18;;;6873:57;6947:18;;4958:46:0;6620:351:1;4958:46:0;5020:1;4860:167;-1:-1:-1;;;4860:167:0:o;5282:130::-;5340:7;5363:43;5367:1;5370;5363:43;;;;;;;;;;;;;;;;;:3;:43::i;17092:290::-;-1:-1:-1;;;;;17164:21:0;;17156:65;;;;-1:-1:-1;;;17156:65:0;;7178:2:1;17156:65:0;;;7160:21:1;7217:2;7197:18;;;7190:30;7256:33;7236:18;;;7229:61;7307:18;;17156:65:0;6976:355:1;17156:65:0;17245:12;;:24;;17262:6;17245:16;:24::i;:::-;17230:12;:39;-1:-1:-1;;;;;17297:18:0;;;;;;:9;:18;;;;;;:30;;17320:6;17297:22;:30::i;:::-;-1:-1:-1;;;;;17276:18:0;;;;;;:9;:18;;;;;;:51;;;;17339:37;;17276:18;;;17339:37;;;;17369:6;1342:25:1;;1330:2;1315:18;;1196:177;17339:37:0;;;;;;;;17092:290;;:::o;11101:215::-;-1:-1:-1;;;;;11171:22:0;;11163:73;;;;-1:-1:-1;;;11163:73:0;;7538:2:1;11163:73:0;;;7520:21:1;7577:2;7557:18;;;7550:30;7616:34;7596:18;;;7589:62;-1:-1:-1;;;7667:18:1;;;7660:36;7713:19;;11163:73:0;7336:402:1;11163:73:0;11269:6;;;11248:38;;-1:-1:-1;;;;;11248:38:0;;;;11269:6;;;11248:38;;;11293:6;:17;;-1:-1:-1;;;;;;11293:17:0;-1:-1:-1;;;;;11293:17:0;;;;;;;;;;11101:215::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:1;;1900:180;-1:-1:-1;1900:180:1:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;4246:356::-;4448:2;4430:21;;;4467:18;;;4460:30;4526:34;4521:2;4506:18;;4499:62;4593:2;4578:18;;4246:356::o;6225:127::-;6286:10;6281:3;6277:20;6274:1;6267:31;6317:4;6314:1;6307:15;6341:4;6338:1;6331:15;6357:128;6424:9;;;6445:11;;;6442:37;;;6459:18;;:::i;6490:125::-;6555:9;;;6576:10;;;6573:36;;;6589:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "746600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24644",
								"balanceOf(address)": "2626",
								"burn(uint256)": "infinite",
								"decimals()": "2312",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2365",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"renounceOwnership()": "30188",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30539"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11653,
									"end": 11906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9832,
									"end": 9849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9832,
									"end": 9849,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9832,
									"end": 9849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21A7A1A5A927A0A1A416A1A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11680,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11675,
									"end": 11680,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11680,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11675,
									"end": 11699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 11675,
									"end": 11699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2927A0A1A421A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11713,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11706,
									"end": 11713,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11713,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 11706,
									"end": 11727,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11706,
									"end": 11727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11734,
									"end": 11743,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11746,
									"end": 11748,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11770,
									"end": 11797,
									"name": "PUSH",
									"source": 0,
									"value": "F8277896582678AC000000"
								},
								{
									"begin": 11755,
									"end": 11767,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11755,
									"end": 11797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11797,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11797,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11814,
									"end": 11824,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11743,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11748,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11825,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11840,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11804,
									"end": 11840,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11814,
									"end": 11824,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11814,
									"end": 11824,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11734,
									"end": 11743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2869,
									"end": 2871,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11854,
									"end": 11900,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11323,
									"end": 19608,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b398fc23dbd91d3fa4f6bf10b414fbb2487a81a2e98656f61400ced71f0a0c264736f6c63430008120033",
									".code": [
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11323,
											"end": 19608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12376,
											"end": 12455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12376,
											"end": 12455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13416,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13416,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12580,
											"end": 12592,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12580,
											"end": 12592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14005,
											"end": 14297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12183,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12104,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14679,
											"end": 14879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14679,
											"end": 14879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 17744,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17744,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 12652,
											"end": 12758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12711,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10625,
											"end": 10755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11966,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12323,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12240,
											"end": 12323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12240,
											"end": 12323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12240,
											"end": 12323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15802,
											"end": 15922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15802,
											"end": 15922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15351,
											"end": 15602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15351,
											"end": 15602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12952,
											"end": 13102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12952,
											"end": 13102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13156,
											"end": 13286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13230,
											"end": 13237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13253,
											"end": 13280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13156,
											"end": 13286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10900,
											"end": 11003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10900,
											"end": 11003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12444,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12437,
											"end": 12449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12437,
											"end": 12449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13484,
											"end": 13488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13529,
											"end": 13535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 13497,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13536,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13497,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13550,
											"end": 13554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13416,
											"end": 13560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14119,
											"end": 14125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14127,
											"end": 14136,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14138,
											"end": 14144,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14109,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14109,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14109,
											"end": 14145,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14109,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 14273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14161,
											"end": 14167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14221,
											"end": 14227,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14194,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14202,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14183,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14183,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 14160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 14152,
											"end": 14273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 14273,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14152,
											"end": 14273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14287,
											"end": 14291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14679,
											"end": 14879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14759,
											"end": 14763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14772,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14772,
											"end": 14855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14795,
											"end": 14802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14804,
											"end": 14854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14853,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14804,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14804,
											"end": 14854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3506,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17826,
											"end": 17892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17916,
											"end": 17917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17907,
											"end": 17913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17907,
											"end": 17917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3850,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3886,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3868,
											"end": 3886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3536,
											"end": 3892,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17899,
											"end": 17954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 17969,
											"end": 17996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4081,
											"end": 4102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4140,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4157,
											"end": 4175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3897,
											"end": 4241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 17961,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18050,
											"end": 18079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18072,
											"end": 18078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18050,
											"end": 18079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18079,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18050,
											"end": 18079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18030,
											"end": 18079,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18101,
											"end": 18113,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18101,
											"end": 18113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18101,
											"end": 18125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18101,
											"end": 18125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18118,
											"end": 18124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18101,
											"end": 18117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18101,
											"end": 18125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18101,
											"end": 18125,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18101,
											"end": 18125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18086,
											"end": 18098,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18086,
											"end": 18125,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "PUSH",
											"source": 0,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18139,
											"end": 18159,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 17783,
											"end": 18163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17744,
											"end": 18163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10209,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10683,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10723,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10730,
											"end": 10749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12240,
											"end": 12323,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12240,
											"end": 12323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12281,
											"end": 12294,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12310,
											"end": 12317,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12303,
											"end": 12317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12303,
											"end": 12317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12303,
											"end": 12317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15858,
											"end": 15862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10209,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15871,
											"end": 15898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15891,
											"end": 15897,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15871,
											"end": 15876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 15871,
											"end": 15898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15871,
											"end": 15898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 15871,
											"end": 15898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15912,
											"end": 15916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10283,
											"end": 10284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10283,
											"end": 10284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15802,
											"end": 15922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15351,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15436,
											"end": 15440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15449,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15472,
											"end": 15479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15520,
											"end": 15535,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15577,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15492,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15481,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15481,
											"end": 15577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12952,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13060,
											"end": 13069,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13071,
											"end": 13077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13036,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13036,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10209,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10969,
											"end": 10997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10988,
											"end": 10996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10969,
											"end": 10987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10969,
											"end": 10997,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10969,
											"end": 10997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10969,
											"end": 10997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 19211,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 18891,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18981,
											"end": 19000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18981,
											"end": 19000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4921,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4982,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4607,
											"end": 5007,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18973,
											"end": 19041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19056,
											"end": 19077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5326,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5385,
											"end": 5404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5012,
											"end": 5410,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 19048,
											"end": 19116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19136,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19152,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19161,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19205,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 19211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 19211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16382,
											"end": 16831,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16382,
											"end": 16831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16476,
											"end": 16496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16476,
											"end": 16496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5599,
											"end": 5620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5675,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5675,
											"end": 5693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5746,
											"end": 5764,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5746,
											"end": 5764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5746,
											"end": 5764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5791,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5415,
											"end": 5816,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16468,
											"end": 16538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16553,
											"end": 16576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6005,
											"end": 6026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6062,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6135,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6214,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6195,
											"end": 6214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5821,
											"end": 6220,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16545,
											"end": 16616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16667,
											"end": 16673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16645,
											"end": 16716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16645,
											"end": 16716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16716,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16716,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16625,
											"end": 16716,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16746,
											"end": 16778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16771,
											"end": 16777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16746,
											"end": 16778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16746,
											"end": 16778,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16746,
											"end": 16778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16778,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16778,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16778,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16790,
											"end": 16825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16818,
											"end": 16824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5865,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5687,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5789,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5789,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5825,
											"end": 5834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5841,
											"end": 5842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5837,
											"end": 5842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5842,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5837,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5825,
											"end": 5842,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5865,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 5027,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4860,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4918,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4946,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6929,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6620,
											"end": 6971,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4958,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 5027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4860,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5412,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5282,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5363,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17092,
											"end": 17382,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17092,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17164,
											"end": 17185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7289,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6976,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17156,
											"end": 17221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17257,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17245,
											"end": 17257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17245,
											"end": 17269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17262,
											"end": 17268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17245,
											"end": 17269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17269,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17245,
											"end": 17269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17230,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17230,
											"end": 17269,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17297,
											"end": 17327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17320,
											"end": 17326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17297,
											"end": 17327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17327,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17297,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17327,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17369,
											"end": 17375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17339,
											"end": 17376,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17092,
											"end": 17382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17092,
											"end": 17382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17092,
											"end": 17382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11316,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11101,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11171,
											"end": 11193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11171,
											"end": 11193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7557,
											"end": 7575,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7557,
											"end": 7575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7557,
											"end": 7575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7650,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7596,
											"end": 7614,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7596,
											"end": 7614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7596,
											"end": 7614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7667,
											"end": 7685,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7667,
											"end": 7685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7667,
											"end": 7685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7732,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7713,
											"end": 7732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7336,
											"end": 7738,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4246,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4560,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6352,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6225,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6281,
											"end": 6284,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6277,
											"end": 6297,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6314,
											"end": 6315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6485,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6357,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6456,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6459,
											"end": 6477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6490,
											"end": 6615,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6490,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6586,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6609,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6573,
											"end": 6609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6589,
											"end": 6607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"contracts/ROACHCOIN.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Burn(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ROACHCOIN.sol\":\"BEP20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ROACHCOIN.sol\":{\"keccak256\":\"0x662c58a1374843d69da336f8adc1f17505c881171754265ace6d50f7620122b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d5820b4d8fc624effc6e0b94e34b26c1e3e1a7c9ad1d67a29c495d2e1ce2ad3\",\"dweb:/ipfs/QmNUYt9rtyPVAtiY6yRfb4wwxLmHJ4gDmKmaqyyMssTHbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 324,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 449,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 455,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 457,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 459,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 461,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 463,
								"contract": "contracts/ROACHCOIN.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ROACHCOIN.sol\":3538:4044  contract Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ROACHCOIN.sol\":3712:3730  constructor () { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ROACHCOIN.sol\":3538:4044  contract Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ROACHCOIN.sol\":3538:4044  contract Context {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038d4367699105c1ac79245f4f74e7cc61b51ad10f8f54576d7587dc78039c60e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122038d4367699105c1ac79245f4f74e7cc61b51ad10f8f54576d7587dc78039c60e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD4 CALLDATASIZE PUSH23 0x99105C1AC79245F4F74E7CC61B51AD10F8F54576D7587D 0xC7 DUP1 CODECOPY 0xC6 0xE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3538:506:0:-:0;;;3712:18;;;;;;;;;;3538:506;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122038d4367699105c1ac79245f4f74e7cc61b51ad10f8f54576d7587dc78039c60e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xD4 CALLDATASIZE PUSH23 0x99105C1AC79245F4F74E7CC61B51AD10F8F54576D7587D 0xC7 DUP1 CODECOPY 0xC6 0xE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3538:506:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3538,
									"end": 4044,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3712,
									"end": 3730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3538,
									"end": 4044,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038d4367699105c1ac79245f4f74e7cc61b51ad10f8f54576d7587dc78039c60e64736f6c63430008120033",
									".code": [
										{
											"begin": 3538,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3538,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 4044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 4044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 4044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 4044,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ROACHCOIN.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ROACHCOIN.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ROACHCOIN.sol\":{\"keccak256\":\"0x662c58a1374843d69da336f8adc1f17505c881171754265ace6d50f7620122b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d5820b4d8fc624effc6e0b94e34b26c1e3e1a7c9ad1d67a29c495d2e1ce2ad3\",\"dweb:/ipfs/QmNUYt9rtyPVAtiY6yRfb4wwxLmHJ4gDmKmaqyyMssTHbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ROACHCOIN.sol\":\"IBEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ROACHCOIN.sol\":{\"keccak256\":\"0x662c58a1374843d69da336f8adc1f17505c881171754265ace6d50f7620122b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d5820b4d8fc624effc6e0b94e34b26c1e3e1a7c9ad1d67a29c495d2e1ce2ad3\",\"dweb:/ipfs/QmNUYt9rtyPVAtiY6yRfb4wwxLmHJ4gDmKmaqyyMssTHbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ROACHCOIN.sol\":9564:11319  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ROACHCOIN.sol\":9809:9950  constructor ()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ROACHCOIN.sol\":9832:9849  address msgSender */\n  0x00\n    /* \"contracts/ROACHCOIN.sol\":9871:9889  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n  caller\n    /* \"contracts/ROACHCOIN.sol\":9871:9889  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/ROACHCOIN.sol\":9901:9944  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/ROACHCOIN.sol\":9901:9944  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":9832:9849  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/ROACHCOIN.sol\":9901:9944  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/ROACHCOIN.sol\":9825:9950  {... */\n  pop\n    /* \"contracts/ROACHCOIN.sol\":9564:11319  contract Ownable is Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ROACHCOIN.sol\":9564:11319  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ROACHCOIN.sol\":10625:10755  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/ROACHCOIN.sol\":10023:10096  function owner() public view returns (address) {... */\n    tag_4:\n        /* \"contracts/ROACHCOIN.sol\":10061:10068  address */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10084:10090  _owner */\n      sload\n        /* \"contracts/ROACHCOIN.sol\":10023:10096  function owner() public view returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":10084:10090  _owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"contracts/ROACHCOIN.sol\":10023:10096  function owner() public view returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":10023:10096  function owner() public view returns (address) {... */\n      add\n      swap1\n      return\n        /* \"contracts/ROACHCOIN.sol\":10900:11003  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"contracts/ROACHCOIN.sol\":10625:10755  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"contracts/ROACHCOIN.sol\":10217:10223  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":10217:10239  _owner == _msgSender() */\n      eq\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n        /* \"#utility.yul\":845:863   */\n      0x64\n      add\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/ROACHCOIN.sol\":10720:10721  0 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10704:10710  _owner */\n      dup1\n      sload\n        /* \"contracts/ROACHCOIN.sol\":10683:10723  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":10704:10710  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":10683:10723  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":10720:10721  0 */\n      dup4\n      swap1\n        /* \"contracts/ROACHCOIN.sol\":10683:10723  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/ROACHCOIN.sol\":10747:10748  0 */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":10730:10749  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":10625:10755  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":10900:11003  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"contracts/ROACHCOIN.sol\":10217:10223  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/ROACHCOIN.sol\":3804:3814  msg.sender */\n      caller\n        /* \"contracts/ROACHCOIN.sol\":10217:10239  _owner == _msgSender() */\n      eq\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n        /* \"#utility.yul\":845:863   */\n      0x64\n      add\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":513:869   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":10209:10276  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_26:\n        /* \"contracts/ROACHCOIN.sol\":10969:10997  _transferOwnership(newOwner) */\n      tag_29\n        /* \"contracts/ROACHCOIN.sol\":10988:10996  newOwner */\n      dup2\n        /* \"contracts/ROACHCOIN.sol\":10969:10987  _transferOwnership */\n      tag_30\n        /* \"contracts/ROACHCOIN.sol\":10969:10997  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/ROACHCOIN.sol\":10900:11003  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ROACHCOIN.sol\":11101:11316  function _transferOwnership(address newOwner) internal {... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ROACHCOIN.sol\":11171:11193  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1076:1078   */\n      0x20\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1058:1079   */\n      mstore\n        /* \"#utility.yul\":1115:1117   */\n      0x26\n        /* \"#utility.yul\":1095:1113   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1088:1118   */\n      mstore\n        /* \"#utility.yul\":1154:1188   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1134:1152   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1127:1189   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1205:1223   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1198:1234   */\n      mstore\n        /* \"#utility.yul\":1251:1270   */\n      0x84\n      add\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":874:1276   */\n      jump\n        /* \"contracts/ROACHCOIN.sol\":11163:11236  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_33:\n        /* \"contracts/ROACHCOIN.sol\":11269:11275  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/ROACHCOIN.sol\":11248:11286  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/ROACHCOIN.sol\":11269:11275  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/ROACHCOIN.sol\":11248:11286  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/ROACHCOIN.sol\":11293:11299  _owner */\n      0x00\n        /* \"contracts/ROACHCOIN.sol\":11293:11310  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ROACHCOIN.sol\":11101:11316  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_39:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_40:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c4b5419a588c35ed6b69188aad7c92adde38375438b971147305d41c635ff66d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea2646970667358221220c4b5419a588c35ed6b69188aad7c92adde38375438b971147305d41c635ff66d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xB5 COINBASE SWAP11 PC DUP13 CALLDATALOAD 0xED PUSH12 0x69188AAD7C92ADDE38375438 0xB9 PUSH18 0x147305D41C635FF66D64736F6C6343000812 STOP CALLER ",
							"sourceMap": "9564:1755:0:-:0;;;9809:141;;;;;;;;;-1:-1:-1;9832:17:0;9871:18;;-1:-1:-1;;;;;;9871:18:0;3804:10;9871:18;;;;;9901:43;;3804:10;;;;9901:43;;9832:17;;9901:43;9825:125;9564:1755;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_435": {
									"entryPoint": 401,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_396": {
									"entryPoint": 130,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_409": {
									"entryPoint": 299,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1278:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:1"
															},
															"nodeType": "YulIf",
															"src": "302:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:1"
															},
															"nodeType": "YulIf",
															"src": "408:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:1",
														"type": ""
													}
												],
												"src": "222:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "837:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:1",
														"type": ""
													}
												],
												"src": "513:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1048:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1065:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1058:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1115:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1149:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1154:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1220:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1225:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1198:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1243:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1255:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1266:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1251:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1243:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1025:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1039:4:1",
														"type": ""
													}
												],
												"src": "874:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea2646970667358221220c4b5419a588c35ed6b69188aad7c92adde38375438b971147305d41c635ff66d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xB5 COINBASE SWAP11 PC DUP13 CALLDATALOAD 0xED PUSH12 0x69188AAD7C92ADDE38375438 0xB9 PUSH18 0x147305D41C635FF66D64736F6C6343000812 STOP CALLER ",
							"sourceMap": "9564:1755:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10625:130;;;:::i;:::-;;10023:73;10061:7;10084:6;10023:73;;;-1:-1:-1;;;;;10084:6:0;;;160:51:1;;10023:73:0;;;;;148:2:1;10023:73:0;;;10900:103;;;;;;:::i;:::-;;:::i;10625:130::-;10217:6;;-1:-1:-1;;;;;10217:6:0;3804:10;10217:22;10209:67;;;;-1:-1:-1;;;10209:67:0;;715:2:1;10209:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;10209:67:0;;;;;;;;;10720:1:::1;10704:6:::0;;10683:40:::1;::::0;-1:-1:-1;;;;;10704:6:0;;::::1;::::0;10683:40:::1;::::0;10720:1;;10683:40:::1;10747:1;10730:19:::0;;-1:-1:-1;;;;;;10730:19:0::1;::::0;;10625:130::o;10900:103::-;10217:6;;-1:-1:-1;;;;;10217:6:0;3804:10;10217:22;10209:67;;;;-1:-1:-1;;;10209:67:0;;715:2:1;10209:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;10209:67:0;513:356:1;10209:67:0;10969:28:::1;10988:8;10969:18;:28::i;:::-;10900:103:::0;:::o;11101:215::-;-1:-1:-1;;;;;11171:22:0;;11163:73;;;;-1:-1:-1;;;11163:73:0;;1076:2:1;11163:73:0;;;1058:21:1;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:1;;;1198:36;1251:19;;11163:73:0;874:402:1;11163:73:0;11269:6;;;11248:38;;-1:-1:-1;;;;;11248:38:0;;;;11269:6;;;11248:38;;;11293:6;:17;;-1:-1:-1;;;;;;11293:17:0;-1:-1:-1;;;;;11293:17:0;;;;;;;;;;11101:215::o;222:286:1:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:1;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139000",
								"executionCost": "25956",
								"totalCost": "164956"
							},
							"external": {
								"owner()": "2292",
								"renounceOwnership()": "30143",
								"transferOwnership(address)": "30416"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9564,
									"end": 11319,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9809,
									"end": 9950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9832,
									"end": 9849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9871,
									"end": 9889,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3804,
									"end": 3814,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9832,
									"end": 9849,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9832,
									"end": 9849,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9901,
									"end": 9944,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9825,
									"end": 9950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9564,
									"end": 11319,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4b5419a588c35ed6b69188aad7c92adde38375438b971147305d41c635ff66d64736f6c63430008120033",
									".code": [
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 11319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10625,
											"end": 10755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10096,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10900,
											"end": 11003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10900,
											"end": 11003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10625,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10683,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10723,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10730,
											"end": 10749,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10217,
											"end": 10223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 869,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10209,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10969,
											"end": 10997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10988,
											"end": 10996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10969,
											"end": 10987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10969,
											"end": 10997,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10969,
											"end": 10997,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10969,
											"end": 10997,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 11003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11316,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11101,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11171,
											"end": 11193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11171,
											"end": 11193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1251,
											"end": 1270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 1276,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11163,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11269,
											"end": 11275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11286,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11101,
											"end": 11316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ROACHCOIN.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ROACHCOIN.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ROACHCOIN.sol\":{\"keccak256\":\"0x662c58a1374843d69da336f8adc1f17505c881171754265ace6d50f7620122b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d5820b4d8fc624effc6e0b94e34b26c1e3e1a7c9ad1d67a29c495d2e1ce2ad3\",\"dweb:/ipfs/QmNUYt9rtyPVAtiY6yRfb4wwxLmHJ4gDmKmaqyyMssTHbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 324,
								"contract": "contracts/ROACHCOIN.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ROACHCOIN.sol\":4625:9053  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ROACHCOIN.sol\":4625:9053  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207881b51b6751753bf658b09e6a7b176d3d7c3a7119e4a09ff9396e21b39bf72b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207881b51b6751753bf658b09e6a7b176d3d7c3a7119e4a09ff9396e21b39bf72b64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x81B51B6751753BF658B09E6A7B176D3D7C3A7119E4A09FF939 PUSH15 0x21B39BF72B64736F6C634300081200 CALLER ",
							"sourceMap": "4625:4428:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;4625:4428:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207881b51b6751753bf658b09e6a7b176d3d7c3a7119e4a09ff9396e21b39bf72b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x81B51B6751753BF658B09E6A7B176D3D7C3A7119E4A09FF939 PUSH15 0x21B39BF72B64736F6C634300081200 CALLER ",
							"sourceMap": "4625:4428:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 9053,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207881b51b6751753bf658b09e6a7b176d3d7c3a7119e4a09ff9396e21b39bf72b64736f6c63430008120033",
									".code": [
										{
											"begin": 4625,
											"end": 9053,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4625,
											"end": 9053,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ROACHCOIN.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ROACHCOIN.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ROACHCOIN.sol\":{\"keccak256\":\"0x662c58a1374843d69da336f8adc1f17505c881171754265ace6d50f7620122b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d5820b4d8fc624effc6e0b94e34b26c1e3e1a7c9ad1d67a29c495d2e1ce2ad3\",\"dweb:/ipfs/QmNUYt9rtyPVAtiY6yRfb4wwxLmHJ4gDmKmaqyyMssTHbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ROACHCOIN.sol": {
				"ast": {
					"absolutePath": "contracts/ROACHCOIN.sol",
					"exportedSymbols": {
						"BEP20Token": [
							1020
						],
						"Context": [
							125
						],
						"IBEP20": [
							100
						],
						"Ownable": [
							436
						],
						"SafeMath": [
							319
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<=",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "79:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "91:64:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "168:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:9:0"
									},
									"scope": 100,
									"src": "159:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "220:49:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "282:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "316:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:7:0"
									},
									"scope": 100,
									"src": "273:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "329:47:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "389:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "421:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:15:0"
									},
									"scope": 100,
									"src": "380:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "442:43:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "498:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "528:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "528:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:15:0"
									},
									"scope": 100,
									"src": "489:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "549:50:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "612:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:0"
									},
									"scope": 100,
									"src": "603:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "661:70:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "744:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "794:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:9:0"
									},
									"scope": 100,
									"src": "735:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "809:203:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1025:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1042:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1034:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1061:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1087:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:6:0"
									},
									"scope": 100,
									"src": "1016:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1099:258:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1370:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1388:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:9:0"
									},
									"scope": 100,
									"src": "1361:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1451:629:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2093:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2109:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2101:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2126:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2118:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2152:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2152:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:6:0"
									},
									"scope": 100,
									"src": "2084:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2164:288:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2465:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2521:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2513:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2547:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2547:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:6:0"
									},
									"scope": 100,
									"src": "2456:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2559:153:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2722:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2731:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2753:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2781:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2773:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2730:57:0"
									},
									"src": "2716:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2794:145:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 99,
									"name": "Approval",
									"nameLocation": "2949:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2958:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2981:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3014:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3006:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2957:63:0"
									},
									"src": "2943:78:0"
								}
							],
							"scope": 1021,
							"src": "69:2955:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125
							],
							"name": "Context",
							"nameLocation": "3547:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "3727:3:0",
										"statements": []
									},
									"id": 104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3724:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:0:0"
									},
									"scope": 125,
									"src": "3712:18:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3790:30:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 109,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3804:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3808:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3804:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 108,
												"id": 111,
												"nodeType": "Return",
												"src": "3797:17:0"
											}
										]
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3745:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3755:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3781:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:9:0"
									},
									"scope": 125,
									"src": "3736:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3883:158:0",
										"statements": [
											{
												"expression": {
													"id": 118,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "3890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$125",
														"typeString": "contract Context"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3890:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4027:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4031:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4027:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 117,
												"id": 122,
												"nodeType": "Return",
												"src": "4020:15:0"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3835:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3843:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "3869:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3868:14:0"
									},
									"scope": 125,
									"src": "3826:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "3538:506:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "4048:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "SafeMath",
							"nameLocation": "4633:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4927:100:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4942:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "4934:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4946:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "4950:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4934:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "4966:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "4971:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4966:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4974:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4958:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "4958:46:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "5020:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "5013:8:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4647:209:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "4869:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4873:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4892:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4884:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4872:22:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4917:9:0"
									},
									"scope": 319,
									"src": "4860:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "5349:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5367:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "5370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5373:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 162,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															197
														],
														"referencedDeclaration": 197,
														"src": "5363:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5363:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "5356:50:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5033:245:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5291:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5314:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5306:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5294:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5339:9:0"
									},
									"scope": 319,
									"src": "5282:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "5782:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "5797:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 183,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5797:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5805:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5789:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5789:29:0"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5833:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "5825:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5837:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 191,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5841:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5837:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5825:17:0"
											},
											{
												"expression": {
													"id": 194,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 189,
													"src": "5858:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 195,
												"nodeType": "Return",
												"src": "5851:8:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5418:265:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5696:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5708:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5700:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5736:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5722:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5722:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5699:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "5773:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:0"
									},
									"scope": 319,
									"src": "5687:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6163:364:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 207,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6388:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6383:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6379:37:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6391:25:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 206,
															"id": 211,
															"nodeType": "Return",
															"src": "6400:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "6432:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "6424:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6424:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6436:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "6440:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6436:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6424:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 221,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "6456:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 222,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "6460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6456:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 224,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "6465:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6456:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6468:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6448:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6448:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "6448:56:0"
											},
											{
												"expression": {
													"id": 229,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "6520:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 230,
												"nodeType": "Return",
												"src": "6513:8:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "5871:221:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "6105:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6117:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6109:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6128:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6120:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6108:22:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6153:9:0"
									},
									"scope": 319,
									"src": "6096:431:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "7038:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "7056:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 244,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7059:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7062:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 242,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															249,
															277
														],
														"referencedDeclaration": 277,
														"src": "7052:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7052:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 247,
												"nodeType": "Return",
												"src": "7045:46:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6533:434:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6980:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6992:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7003:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "6995:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:22:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "7029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7028:9:0"
									},
									"scope": 319,
									"src": "6971:126:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "7656:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7734:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7738:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 265,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "7741:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7726:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "7726:28:0"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "7769:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "7761:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7773:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "7777:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7761:17:0"
											},
											{
												"expression": {
													"id": 274,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 269,
													"src": "7877:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 275,
												"nodeType": "Return",
												"src": "7870:8:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "7103:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "7570:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7582:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7574:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7593:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7585:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7610:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7596:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:50:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7646:9:0"
									},
									"scope": 319,
									"src": "7561:323:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "8384:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8402:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 289,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8405:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8408:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 287,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															294,
															318
														],
														"referencedDeclaration": 318,
														"src": "8398:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8398:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 286,
												"id": 292,
												"nodeType": "Return",
												"src": "8391:44:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "7890:423:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "8326:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "8330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8349:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "8341:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8329:22:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "8375:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8374:9:0"
									},
									"scope": 319,
									"src": "8317:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "8989:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "9004:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9009:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 310,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "9012:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "8996:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "9039:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "9043:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 305,
												"id": 316,
												"nodeType": "Return",
												"src": "9032:12:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "8447:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "8903:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8926:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8918:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8943:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8929:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8906:50:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8980:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8979:9:0"
									},
									"scope": 319,
									"src": "8894:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "4625:4428:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 321,
										"name": "Context",
										"nameLocations": [
											"9584:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "9584:7:0"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "9584:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "9057:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 436,
							"linearizedBaseContracts": [
								436,
								125
							],
							"name": "Ownable",
							"nameLocation": "9573:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 324,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "9613:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 436,
									"src": "9597:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 323,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9597:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 330,
									"name": "OwnershipTransferred",
									"nameLocation": "9632:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "9669:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "9653:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9700:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "9684:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9652:57:0"
									},
									"src": "9626:84:0"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9825:125:0",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "9840:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "9832:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9832:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "9852:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9852:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9832:32:0"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 339,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "9871:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 340,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9880:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9871:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "9871:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9922:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9922:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "9934:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 343,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "9901:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9901:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "9896:48:0"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "9716:89:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 352,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9821:2:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9825:0:0"
									},
									"scope": 436,
									"src": "9809:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "10070:26:0",
										"statements": [
											{
												"expression": {
													"id": 358,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 324,
													"src": "10084:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "10077:13:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9956:63:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "10032:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10037:2:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "10061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10060:9:0"
									},
									"scope": 436,
									"src": "10023:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "10202:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "10217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "10227:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10227:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10217:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10241:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10209:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "10209:67:0"
											},
											{
												"id": 372,
												"nodeType": "PlaceholderStatement",
												"src": "10283:1:0"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "10102:75:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 374,
									"name": "onlyOwner",
									"nameLocation": "10190:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10199:2:0"
									},
									"src": "10181:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "10671:84:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 381,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10720:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10712:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 382,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10712:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10712:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 380,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "10683:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10683:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "EmitStatement",
												"src": "10678:45:0"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10730:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10739:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10739:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10730:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "10730:19:0"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "10296:325:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "onlyOwner",
												"nameLocations": [
													"10661:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 374,
												"src": "10661:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10661:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "10634:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10651:2:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10671:0:0"
									},
									"scope": 436,
									"src": "10625:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "10962:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "10988:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 404,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10969:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10969:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "10969:28:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "10761:135:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 401,
												"name": "onlyOwner",
												"nameLocations": [
													"10952:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 374,
												"src": "10952:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10952:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "10909:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10935:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "10927:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10926:18:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10962:0:0"
									},
									"scope": 436,
									"src": "10900:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "11156:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "11171:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11191:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11183:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11183:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11171:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11195:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11163:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "11163:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 426,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "11269:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "11277:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "11248:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11248:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "EmitStatement",
												"src": "11243:43:0"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "11293:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 431,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "11302:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11293:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "11293:17:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "11009:88:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "11110:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "11137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "11129:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11128:18:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11156:0:0"
									},
									"scope": 436,
									"src": "11101:215:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "9564:1755:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 437,
										"name": "Context",
										"nameLocations": [
											"11346:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "11346:7:0"
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "11346:7:0"
								},
								{
									"baseName": {
										"id": 439,
										"name": "IBEP20",
										"nameLocations": [
											"11355:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "11355:6:0"
									},
									"id": 440,
									"nodeType": "InheritanceSpecifier",
									"src": "11355:6:0"
								},
								{
									"baseName": {
										"id": 441,
										"name": "Ownable",
										"nameLocations": [
											"11363:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 436,
										"src": "11363:7:0"
									},
									"id": 442,
									"nodeType": "InheritanceSpecifier",
									"src": "11363:7:0"
								}
							],
							"canonicalName": "BEP20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								436,
								100,
								125
							],
							"name": "BEP20Token",
							"nameLocation": "11332:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 445,
									"libraryName": {
										"id": 443,
										"name": "SafeMath",
										"nameLocations": [
											"11382:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "11382:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "11376:27:0",
									"typeName": {
										"id": 444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11395:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11446:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "11409:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 448,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 446,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11409:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 447,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11429:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 455,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "11520:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "11462:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 454,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 450,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11471:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11462:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 453,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 451,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11491:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11482:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 452,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11502:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 457,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "11554:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "11538:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11538:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 459,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "11585:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "11571:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 458,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11571:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 461,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "11614:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "11599:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 460,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11599:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "11641:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "11626:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 462,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11626:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "11668:238:0",
										"statements": [
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 466,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "11675:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "434f434b524f4143482d434f494e",
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11683:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7071861272f860bd06017327ee7a1eb8124b6afbe9a1e3484e4173410ada5df1",
															"typeString": "literal_string \"COCKROACH-COIN\""
														},
														"value": "COCKROACH-COIN"
													},
													"src": "11675:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "11675:24:0"
											},
											{
												"expression": {
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 470,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "11706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "524f414348434f494e",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11716:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_581afb54115186efa868e1f205e3c8f2fb7f33db6125a27b36911c3bdd11d801",
															"typeString": "literal_string \"ROACHCOIN\""
														},
														"value": "ROACHCOIN"
													},
													"src": "11706:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "11706:21:0"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "11734:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11746:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11734:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "11734:14:0"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "11755:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333030303030303030303030303030303030303030303030303030",
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11770:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300000000000000000000000000_by_1",
															"typeString": "int_const 300000000000000000000000000"
														},
														"value": "300000000000000000000000000"
													},
													"src": "11755:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "11755:42:0"
											},
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 482,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "11804:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 485,
														"indexExpression": {
															"expression": {
																"id": 483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11814:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11818:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11814:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11804:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "11828:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11804:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "11804:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11871:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11863:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11863:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11863:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 494,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11875:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11879:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11875:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "11887:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "11854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11854:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "11849:51:0"
											}
										]
									},
									"id": 500,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11664:2:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11668:0:0"
									},
									"scope": 1020,
									"src": "11653:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "12018:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 506,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "12032:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12032:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 505,
												"id": 508,
												"nodeType": "Return",
												"src": "12025:14:0"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "11912:50:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "11975:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11983:2:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "12009:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12008:9:0"
									},
									"scope": 1020,
									"src": "11966:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "12154:29:0",
										"statements": [
											{
												"expression": {
													"id": 516,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "12168:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 515,
												"id": 517,
												"nodeType": "Return",
												"src": "12161:16:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "12051:49:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "12113:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12121:2:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "12147:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 513,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12146:7:0"
									},
									"scope": 1020,
									"src": "12104:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "12296:27:0",
										"statements": [
											{
												"expression": {
													"id": 525,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 461,
													"src": "12310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 524,
												"id": 526,
												"nodeType": "Return",
												"src": "12303:14:0"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "12189:47:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12249:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12255:2:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12281:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 522,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12281:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12280:15:0"
									},
									"scope": 1020,
									"src": "12240:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "12430:25:0",
										"statements": [
											{
												"expression": {
													"id": 534,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 463,
													"src": "12444:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 533,
												"id": 535,
												"nodeType": "Return",
												"src": "12437:12:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "12329:43:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12385:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12389:2:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "12415:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12414:15:0"
									},
									"scope": 1020,
									"src": "12376:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "12566:32:0",
										"statements": [
											{
												"expression": {
													"id": 543,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 457,
													"src": "12580:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 542,
												"id": 544,
												"nodeType": "Return",
												"src": "12573:19:0"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "12461:46:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12520:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12531:2:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "12557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12556:9:0"
									},
									"scope": 1020,
									"src": "12511:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12720:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 554,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "12734:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"id": 555,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "12744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12734:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 553,
												"id": 557,
												"nodeType": "Return",
												"src": "12727:25:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "12604:44:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12661:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12670:17:0"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12710:9:0"
									},
									"scope": 1020,
									"src": "12652:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "13029:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 570,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "13046:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13046:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "13060:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "13071:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "13036:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13036:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "13036:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 568,
												"id": 577,
												"nodeType": "Return",
												"src": "13085:11:0"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "12764:184:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12961:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12978:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "12970:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12997:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "12989:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12969:35:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "13023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13022:6:0"
									},
									"scope": 1020,
									"src": "12952:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "13239:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 589,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "13253:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 591,
														"indexExpression": {
															"id": 590,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13265:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13253:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 593,
													"indexExpression": {
														"id": 592,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "13272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13253:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 588,
												"id": 594,
												"nodeType": "Return",
												"src": "13246:34:0"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "13108:44:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13165:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "13175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "13190:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13174:32:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "13230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13229:9:0"
									},
									"scope": 1020,
									"src": "13156:130:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "13490:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "13506:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13506:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "13520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "13529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "13497:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13497:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "13497:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 605,
												"id": 614,
												"nodeType": "Return",
												"src": "13543:11:0"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "13292:120:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13425:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13441:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "13433:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13458:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "13450:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13432:33:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "13484:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13483:6:0"
									},
									"scope": 1020,
									"src": "13416:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "14102:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "14119:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "14127:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "14138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "14109:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14109:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14109:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "14161:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 636,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "14169:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14169:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 645,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "14221:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14229:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 638,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "14183:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 640,
																		"indexExpression": {
																			"id": 639,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 619,
																			"src": "14195:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14183:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 643,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 641,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "14203:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14203:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14183:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14217:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 197,
																"src": "14183:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14183:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14152:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14152:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "14152:121:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 627,
												"id": 651,
												"nodeType": "Return",
												"src": "14280:11:0"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "13566:435:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "14014:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14035:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "14027:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14051:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "14043:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14070:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "14062:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14026:51:0"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "14096:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14095:6:0"
									},
									"scope": 1020,
									"src": "14005:292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "14765:114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 664,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "14781:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14781:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "14795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 674,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "14843:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 667,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "14804:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 670,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 668,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 113,
																				"src": "14816:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14816:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14804:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 672,
																	"indexExpression": {
																		"id": 671,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "14830:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14804:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14839:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 152,
																"src": "14804:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14804:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14772:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14772:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "14772:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14869:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 662,
												"id": 679,
												"nodeType": "Return",
												"src": "14862:11:0"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "14303:372:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "14688:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14714:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "14706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "14731:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "14723:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14705:37:0"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "14759:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14759:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14758:6:0"
									},
									"scope": 1020,
									"src": "14679:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "15442:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 692,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "15458:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15458:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "15472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 702,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "15520:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15537:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 695,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "15481:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 698,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 696,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 113,
																				"src": "15493:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15493:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15481:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 700,
																	"indexExpression": {
																		"id": 699,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "15507:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15481:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15516:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 197,
																"src": "15481:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15481:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "15449:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15449:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "15449:129:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 690,
												"id": 708,
												"nodeType": "Return",
												"src": "15585:11:0"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "14885:462:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "15360:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15386:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "15378:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "15403:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "15395:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15377:42:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "15436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:6:0"
									},
									"scope": 1020,
									"src": "15351:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "15864:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 721,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "15877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "15891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 720,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "15871:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15871:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "15871:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15912:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 719,
												"id": 727,
												"nodeType": "Return",
												"src": "15905:11:0"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "15608:190:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 715,
												"name": "onlyOwner",
												"nameLocations": [
													"15839:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 374,
												"src": "15839:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15839:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "15811:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15824:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "15816:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15815:16:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "15858:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 717,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15857:6:0"
									},
									"scope": 1020,
									"src": "15802:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "16461:370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "16476:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16494:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16486:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16486:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16486:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16476:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16498:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16468:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "16468:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 750,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "16553:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16574:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16566:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 751,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16566:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16566:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16553:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16578:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16545:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "16545:71:0"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 759,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "16625:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 761,
														"indexExpression": {
															"id": 760,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "16635:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16625:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 766,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "16667:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16675:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 762,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "16645:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 764,
																"indexExpression": {
																	"id": 763,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "16655:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16645:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16663:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "16645:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16645:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16625:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "16625:91:0"
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 771,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "16723:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 773,
														"indexExpression": {
															"id": 772,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "16733:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16723:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 778,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "16771:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 774,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "16746:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 776,
																"indexExpression": {
																	"id": 775,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "16756:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16746:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16767:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "16746:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16746:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16723:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "16723:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 783,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "16799:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "16807:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "16818:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 782,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "16790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16790:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "EmitStatement",
												"src": "16785:40:0"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "15928:450:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16391:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "16409:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "16401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16425:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "16417:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16444:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "16436:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16400:51:0"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16461:0:0"
									},
									"scope": 1020,
									"src": "16382:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "17149:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "17164:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17183:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17175:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17175:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17175:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17164:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17187:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17156:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "17156:65:0"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "17230:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 810,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "17262:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 808,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "17245:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17258:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "17245:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17245:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17230:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "17230:39:0"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 814,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "17276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 816,
														"indexExpression": {
															"id": 815,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "17286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17276:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 821,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "17320:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 817,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "17297:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 819,
																"indexExpression": {
																	"id": 818,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "17307:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17297:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17316:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "17297:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17297:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17276:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "17276:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17356:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17348:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17348:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17348:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "17360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "17369:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 825,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "17339:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17339:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "EmitStatement",
												"src": "17334:42:0"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "16837:251:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "17101:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17115:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "17107:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17132:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "17124:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17106:33:0"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17149:0:0"
									},
									"scope": 1020,
									"src": "17092:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "17388:298:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
									"id": 842,
									"name": "Burn",
									"nameLocation": "17696:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "17717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "17701:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17733:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "17725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17700:39:0"
									},
									"src": "17690:50:0"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "17783:380:0",
										"statements": [
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "17798:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "17790:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 847,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17790:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 851,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 849,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "17807:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17807:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17790:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 853,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "17834:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 854,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17844:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17844:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17834:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17856:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17826:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "17826:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 863,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "17907:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17916:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17907:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17919:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17899:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17899:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "17899:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 870,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "17969:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 872,
																"indexExpression": {
																	"id": 871,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "17979:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17969:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 873,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "17990:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17969:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17998:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17961:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "17961:60:0"
											},
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 878,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "18030:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 880,
														"indexExpression": {
															"id": 879,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "18040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18030:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 885,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "18072:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 881,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "18050:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 883,
																"indexExpression": {
																	"id": 882,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "18060:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18050:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18068:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 169,
															"src": "18050:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18050:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18030:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "18030:49:0"
											},
											{
												"expression": {
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "18086:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 892,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "18118:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 890,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "18101:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18114:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 169,
															"src": "18101:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18101:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18086:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "18086:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 897,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "18144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "18152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "18139:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18139:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "18134:25:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "17753:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "17758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17757:16:0"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17783:0:0"
									},
									"scope": 1020,
									"src": "17744:419:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "18224:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 910,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "18239:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 911,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18239:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18262:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18231:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "18231:67:0"
											},
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 919,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "18307:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 921,
														"indexExpression": {
															"id": 920,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "18317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18307:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 926,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "18351:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18359:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 922,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "18328:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 924,
																"indexExpression": {
																	"id": 923,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "18338:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18328:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18347:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "18328:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18328:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18307:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "18307:89:0"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 931,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "18403:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 934,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "18435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 932,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "18418:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18431:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 169,
															"src": "18418:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18418:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18403:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "18403:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 939,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "18459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "18468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "18454:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18454:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "EmitStatement",
												"src": "18449:26:0"
											}
										]
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18176:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "18182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "18199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18181:33:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18224:0:0"
									},
									"scope": 1020,
									"src": "18167:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "18966:245:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 955,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "18981:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18998:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18990:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 956,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18990:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18990:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18981:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19002:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18973:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "18973:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 965,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "19056:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19075:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19067:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19067:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19067:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19056:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19079:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19048:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "19048:68:0"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 974,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "19125:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 977,
															"indexExpression": {
																"id": 975,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "19137:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19125:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 978,
														"indexExpression": {
															"id": 976,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "19144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19125:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "19155:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19125:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "19125:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 983,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "19182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "19189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "19198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "19173:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "EmitStatement",
												"src": "19168:37:0"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "18485:402:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "18900:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "18909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "18932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "18924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18949:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "18941:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18908:48:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18966:0:0"
									},
									"scope": 1020,
									"src": "18891:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "19444:161:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 998,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "19457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "19466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "19451:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19451:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "19451:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "19489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1004,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "19498:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19498:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1013,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "19551:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19559:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1006,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "19512:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1008,
																		"indexExpression": {
																			"id": 1007,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "19524:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19512:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1011,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1009,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "19533:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19533:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19512:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19547:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 197,
																"src": "19512:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19512:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "19480:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19480:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "19480:119:0"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "19217:162:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "19392:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19410:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "19402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "19419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19401:33:0"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19444:0:0"
									},
									"scope": 1020,
									"src": "19383:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "11323:8285:0",
							"usedErrors": []
						}
					],
					"src": "33:19575:0"
				},
				"id": 0
			}
		}
	}
}